###JAVA 설치 / systemctl 

# Cd /usr/bin/java 에서
# Mv /usr/bin/java /usr/bin/java_old 후 
Java version으로 버전 정보가 나오지 않는 것을 확인

# tar...

# mv jdk1.8.0_312/ jdk-1.8

# vi /etc/profile

JAVA_HOME=/sw/jdk-1.8
JRE_HOME=/$JAVA_HOME/jre
PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin
export JAVA_HOME
export JRE_HOME

# source /etc/profie

#vi /etc/systemd/system/tomcat.service

[Unit]
Description=tomcat
After=network.target syslog.target

[Service]
Type=forking
Environment="JAVA_HOME=/sw/jdk-1.8"
#Environment=/sw/tomcat1
User=wasadm
Group=wasadm
ExecStart=/sw/tomcat_admin/bin/startup.sh
ExecStop=/sw/tomcat_admin/bin/shutdown.sh

[Install]
WantedBy=multi-user.target

#systemctl daemon-reload


#####일반계정 systemd 등록#########
1)Wasadm으로 ssh접속 하고 해야함
2) selinux 종료
3) systemctl 작성
[wasadm@localhost user]$ pwd
/home/wasadm/.config/systemd/user

vi tomcat_user.service

[Unit]
Description=tomcat
After=network.target syslog.target

[Service]
Type=forking
Environment="JAVA_HOME=/sw/jdk-1.8"
#Environment=/sw/tomcat1
ExecStart=/sw/tomcat8_user/bin/startup.sh
ExecStop=/sw/tomcat8_user/bin/shutdown.sh

[Install]
WantedBy=multi-user.target

4. enable 등록 후 start,stop,status 확인
 systemctl --user enable tomcat_user.service

5. loginctl enable-linger wasadm


####setenv.sh######

#Heap Memory 설정

DATE=`date +%Y%m%d%H%M%S`

JAVA_OPTS="${JAVA_OPTS} -Xms2048m"
JAVA_OPTS="${JAVA_OPTS} -Xmx2048m"
JAVA_OPTS="${JAVA_OPTS} -XX:MetaspaceSize=256m"
JAVA_OPTS="${JAVA_OPTS} -XX:MaxMetaspaceSize=256m"
####################################################
JAVA_OPTS="${JAVA_OPTS} -XX:+UseParallelGC"
JAVA_OPTS="${JAVA_OPTS} -XX:+UseParallelOldGC"
JAVA_OPTS="${JAVA_OPTS} -verbose:gc"
JAVA_OPTS="${JAVA_OPTS} -Xloggc:/logs/tomcat_admin/gclog/tomcat_admin_gc.log.${DATE}"
JAVA_OPTS="${JAVA_OPTS} -XX:+PrintGCDetails"
JAVA_OPTS="${JAVA_OPTS} -XX:+PrintGCTimeStamps"
JAVA_OPTS="${JAVA_OPTS} -XX:+PrintHeapAtGC"
JAVA_OPTS="${JAVA_OPTS} -XX:+HeapDumpOnOutOfMemoryError"
JAVA_OPTS="${JAVA_OPTS} -XX:HeapDumpPath=/logs/tomcat_admin/gclog/tomcat_admin_java_pid_$DATE.hprof"


아파치 서비스 등록

~/.config/systemd/user

# vi httpd.service

[Unit]

Description=apache

After=network.target syslog.target



[Service]

Type=forking


ExecStart=/app/apache/bin/apachectl start

ExecStop=/app/apache/bin/apachectl stop


[Install]

WantedBy=default.target





일반 서비스 등록

1) # vi /etc/rc.d/init.d/tomcat_user

#!/bin/bash
#
# tomcat_user
#
# chkconfig: 345 96 30
# description:  Start up the Tomcat servlet engine.
#
# processname: java
# pidfile: /var/run/tomcat.pid
#
### BEGIN INIT INFO
# Provides: tomcat
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Should-Start: distcache
# Short-Description: start and stop Apache HTTP Server
# Description: implementation for Servlet 2.5 and JSP 2.1
## END INIT INFO

# Source function library.
. /etc/init.d/functions

## tomcat installation directory
PROCESS_NAME=tomcat_user

CATALINA_HOME="/sw/tomcat8_user"

## run as a diffent user
TOMCAT_USER=wasadm

##  Path to the pid, runnning info file
pidfile=${PIDFILE-/var/run/${PROCESS_NAME}.pid};
lockfile=${LOCKFILE-/var/lock/subsys/${PROCESS_NAME}};

RETVAL=0

case "$1" in
 start)
        PID=`pidofproc -p ${pidfile} ${PROCESS_NAME}`
        if [[ (-n ${PID}) && ($PID -gt 0) ]]; then
                logger -s "${PROCESS_NAME}(pid ${PID}) is  already running."
                exit;
        fi
        if [ -f $CATALINA_HOME/bin/startup.sh ];
          then
            logger -s "Starting Tomcat"
            /bin/su -l ${TOMCAT_USER} -c "$CATALINA_HOME/bin/startup.sh -Dprocessname=${PROCESS_NAME}"
            PID=`ps -eaf|grep processname=${PROCESS_NAME}|grep -v grep|awk '{print $2}'`
            RETVAL=$?
            [ $RETVAL = 0 ] && touch ${lockfile}
            [ $RETVAL = 0 ] && echo "${PID}" > ${pidfile}
        fi
        ;;
 stop)
        PID=`pidofproc -p ${pidfile} ${PROCESS_NAME}`
        ## if PID valid run shutdown.sh
        if [[ -z ${PID} ]];then
            logger -s "${PROCESS_NAME} is not running."
            exit;
        fi

        if [[ (${PID} -gt 0) && (-f $CATALINA_HOME/bin/shutdown.sh) ]];
          then
            logger -s "Stopping Tomcat"
            /bin/su -l ${TOMCAT_USER} -c "$CATALINA_HOME/bin/shutdown.sh"
            RETVAL=$?
            [ $RETVAL = 0 ] && rm -f ${lockfile}
            [ $RETVAL = 0 ] && rm -f ${pidfile}
        fi
        ;;
 status)
        status -p ${pidfile} ${PROCESS_NAME}
        RETVAL=$?
        ;;
 restart)
         $0 stop
         $0 start
         ;;
version)
        if [ -f $CATALINA_HOME/bin/version.sh ];
          then
            logger -s "Display Tomcat Version"
            /bin/su -l ${TOMCAT_USER} -c "$CATALINA_HOME/bin/version.sh"
            RETVAL=$?
        fi
        ;;
 *)
         echo $"Usage: $0 {start|stop|restart|status|version}"
        exit 1
        ;;
esac
exit $RETVAL

2) 실행속성 부여
Chmod +x /etc/init.d/tomcat8_user

3) run-level 등록
Chkconfig --add tomcat8_user

4) service 시작,중지,상태 
service tomcat8_user start,stop,status

5) run-level 삭제
Chkconfig tomcat8_user off
